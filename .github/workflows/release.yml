name: release

on: [workflow_dispatch]


jobs:
  determine_version:
    name: 'Determine new version'
    runs-on: 'ubuntu-latest'
    outputs:
      VERSION: ${{ steps.version.outputs.number }}
    steps:
      - name: Determine version
        id: version
        run: echo "number=v`date +%Y`.`date +%V`.${{github.run_number}}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean install -DskipTests=true

  release:
    needs: [ determine_version, build ]
    runs-on: 'ubuntu-latest'
    outputs:
      VERSION: ${{ needs.determine_version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v3

      - name: Release new version
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ needs.determine_version.outputs.VERSION }}
          tag_name: ${{ needs.determine_version.outputs.VERSION }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

  publish:
    needs: [ release ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: "check is JRELEASER_NEXUS2_USERNAME exists"
        env:
          nexus_username: ${{ secrets.JRELEASER_NEXUS2_USERNAME }}
        if: ${{ env.nexus_username == '' }}
        run: 'echo "echo the secret \"JRELEASER_NEXUS2_USERNAME\" has not been made; echo please go to \"settings \> secrets \> actions\" to create it"'

      - name: "check is JRELEASER_NEXUS2_PASSWORD exists"
        env:
          nexus_password: ${{ secrets.JRELEASER_NEXUS2_PASSWORD }}
        if: ${{ env.nexus_password == '' }}
        run: 'echo "echo the secret \"JRELEASER_NEXUS2_PASSWORD\" has not been made; echo please go to \"settings \> secrets \> actions\" to create it"'

      - name: "check is JRELEASER_NEXUS2_PASSWORD exists"
        env:
          gpg_passphrase: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
        if: ${{ env.gpg_passphrase == '' }}
        run: 'echo "echo the secret \"JRELEASER_GPG_PASSPHRASE\" has not been made; echo please go to \"settings \> secrets \> actions\" to create it"'

      - name: "check is JRELEASER_NEXUS2_PASSWORD exists"
        env:
          gpg_secret_key: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
        if: ${{ env.gpg_secret_key == '' }}
        run: 'echo "echo the secret \"JRELEASER_GPG_SECRET_KEY\" has not been made; echo please go to \"settings \> secrets \> actions\" to create it"'

      - name: "check is JRELEASER_NEXUS2_PASSWORD exists"
        env:
          gpg_public_key: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
        if: ${{ env.gpg_public_key == '' }}
        run: 'echo "echo the secret \"JRELEASER_GPG_PUBLIC_KEY\" has not been made; echo please go to \"settings \> secrets \> actions\" to create it"'

      - name: "check is GITHUB_TOKEN exists"
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ env.github_token == '' }}
        run: 'echo "echo the secret \"GITHUB_TOKEN\" has not been made; echo please go to \"settings \> secrets \> actions\" to create it"'

      - name: Set up Java
        uses: actions/setup-java@v4
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SECRET_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Set version
        run: mvn versions:set -DnewVersion=${{ needs.release.outputs.VERSION }}

      - name: Publish package
        env:
          MAVEN_USERNAME: ${{ secrets.OSS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSS_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: mvn --batch-mode -Prelease deploy -Dmaven.test.skip=true